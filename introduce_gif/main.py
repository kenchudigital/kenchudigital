# generated by ChatGPT ! Of course, I tech ChatGPT a lot ~

from PIL import Image, ImageDraw, ImageFont
import os
import shutil

def create_typing_gif(sentences, width, height, duration, font_size, output_file='output.gif'):
    # Parameters for black background and white text
    background_color = (0, 0, 0)  # Black background
    text_color = (255, 255, 255)  # White text
    frames = []

    # Use the copied Monaco font
    font_path = './font/Monaco.ttf'
    try:
        font = ImageFont.truetype(font_path, font_size)
    except IOError:
        print(f"Error: Cannot open font file at path: {font_path}")
        return

    # Create frames for each sentence
    for sentence in sentences:
        for i in range(1, len(sentence) + 1):
            img = Image.new('RGB', (width, height), color=background_color)
            d = ImageDraw.Draw(img)

            # Calculate text size and position
            text = sentence[:i]
            bbox = d.textbbox((0, 0), text, font=font)
            text_width = bbox[2] - bbox[0]
            text_height = bbox[3] - bbox[1]
            text_x = (width - text_width) // 2
            text_y = (height - text_height) // 2

            # Draw text centered
            d.text((text_x, text_y), text, font=font, fill=text_color)
            
            frame_path = f'frames/frame_{len(frames):03}.png'
            img.save(frame_path)
            frames.append(frame_path)
        
        # Add a frame with a blank line between sentences
        img = Image.new('RGB', (width, height), color=background_color)
        blank_frame_path = f'frames/frame_{len(frames):03}.png'
        img.save(blank_frame_path)
        frames.append(blank_frame_path)

    # Save the frames as a GIF
    imgs = [Image.open(f) for f in frames]
    imgs[0].save(output_file, save_all=True, append_images=imgs[1:], duration=duration, loop=0)

    # Cleanup the temporary directory
    for f in frames:
        os.remove(f)
    if os.path.exists('frames'):
        shutil.rmtree('frames')

def main():
    # Create a temporary directory to store frames
    if os.path.exists('frames'):
        shutil.rmtree('frames')
    os.makedirs('frames', exist_ok=True)

    # Ask for GIF size
    width = int(input("Enter the width of the GIF: "))
    height = int(input("Enter the height of the GIF: "))

    # Ask for the font size
    font_size = int(input("Enter the font size: "))

    # Ask for the speed of tapping
    speed = float(input("Enter the speed of tapping (normal=1.0): "))
    duration = int(1000 / speed)  # Convert speed to duration in milliseconds

    # Collect sentences from the user
    sentences = []
    while True:
        sentence = input("Enter a sentence: ")
        sentences.append(sentence)
        another = input("Is there any other sentence? (Yes/No): ").strip().lower()
        if another != 'yes':
            break

    # Create GIF with collected sentences
    create_typing_gif(sentences, width, height, duration, font_size)
    print("GIF created successfully as 'output.gif'.")

if __name__ == '__main__':
    main()
